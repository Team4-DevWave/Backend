const { getSubredditInfo, reportSubredditInfo } = require('./subredditController');
const SubredditModel = require('../models/SubredditModel');

describe('Subreddit Controller', () => {
    describe('getSubredditInfo', () => {
        it('should retrieve subreddit information', async () => {
            const req = { params: { subredditName: 'example_subreddit' } };
            const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };

            const subredditInfo = { name: 'example_subreddit', description: 'Sample subreddit description' };
            jest.spyOn(SubredditModel, 'getSubredditInfo').mockResolvedValue(subredditInfo);

            await getSubredditInfo(req, res);

            expect(res.status).toHaveBeenCalledWith(200);
            expect(res.json).toHaveBeenCalledWith(subredditInfo);
        });

        it('should handle errors gracefully', async () => {
            const req = { params: { subredditName: 'invalid_subreddit' } };
            const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };

            jest.spyOn(SubredditModel, 'getSubredditInfo').mockRejectedValue(new Error('Subreddit not found'));

            await getSubredditInfo(req, res);

            expect(res.status).toHaveBeenCalledWith(500);
            expect(res.json).toHaveBeenCalledWith({ error: 'Subreddit not found' });
        });
    });

    describe('reportSubredditInfo', () => {
        it('should report subreddit information', async () => {
            const req = { params: { subredditName: 'example_subreddit' } };
            const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };

            jest.spyOn(SubredditModel, 'reportSubredditInfo').mockResolvedValue();

            await reportSubredditInfo(req, res);

            expect(res.status).toHaveBeenCalledWith(200);
            expect(res.json).toHaveBeenCalledWith({ message: 'Subreddit information reported successfully.' });
        });

        it('should handle errors gracefully', async () => {
            const req = { params: { subredditName: 'invalid_subreddit' } };
            const res = { status: jest.fn().mockReturnThis(), json: jest.fn() };

            jest.spyOn(SubredditModel, 'reportSubredditInfo').mockRejectedValue(new Error('Subreddit not found'));

            await reportSubredditInfo(req, res);

            expect(res.status).toHaveBeenCalledWith(500);
            expect(res.json).toHaveBeenCalledWith({ error: 'Subreddit not found' });
        });
    });

    
});

